(()=>{"use strict";class e{draw(e,t){const l=document.createElement("game-board");l.style.display="grid",l.style.gridTemplateColumns="repeat(8, 65px)",e.forEach((e=>{e.forEach((e=>{l.appendChild(e.createCell(t))}))}));const s=document.querySelector("game-board");s&&s.remove(),document.querySelector("container").appendChild(l)}}class t{index;row;value;element;constructor(e,t,l){this.index=e,this.row=t,this.value=l}createCell(e){return this.element=document.createElement("div"),this.element.style.height="65px",this.element.style.width="100%",this.element.style.border="1px solid black",this.element.style.display="flex",this.element.style.alignItems="center",this.element.style.justifyContent="center",this.element.style.fontSize="25px",this.element.style.fontWeight="bold",this.element.style.cursor="pointer",this.element.setAttribute("cell-value",this.value),this.element.addEventListener("click",(()=>e(this))),this.element}}class l{getInitialState(){const e=Array.from({length:8},((e,l)=>Array.from({length:8},((e,s)=>new t(s,l,"")))));for(let t=0;t<8;t++)for(let l=0;l<8;l++){let s;do{s=this.randomValue()}while(l>=2&&e[t][l-1].value===s&&e[t][l-2].value===s||t>=2&&e[t-1][l].value===s&&e[t-2][l].value===s);e[t][l].value=s}return e}isTransitionValid(e,t){const l=Math.abs(e.row-t.row),s=Math.abs(e.index-t.index);return e.value!==t.value&&(1===l&&0===s||0===l&&1===s)}getCombinations(e,t){const l=[];return t.forEach((({row:t,index:s,value:a})=>{const i=e[t];let n=[s];for(let e=s-1;e>=0&&i[e].value===a;e--)n.unshift(e);for(let e=s+1;e<8&&i[e].value===a;e++)n.push(e);n.length>=3&&l.push({id:t,type:"row",cellIds:n,bonus:n.length>4});let o=[t];for(let l=t-1;l>=0&&e[l][s].value===a;l--)o.unshift(l);for(let l=t+1;l<8&&e[l][s].value===a;l++)o.push(l);o.length>=3&&l.push({id:s,type:"column",cellIds:o,bonus:o.length>4})})),l}updateState(e,t){return t.forEach((({id:t,type:l,cellIds:s,bonus:a})=>{if("row"===l){s=a?Array.from({length:8},((e,t)=>t)):s;for(let l=t;l>0;l--)s.forEach((t=>{e[l][t].value=e[l-1][t].value}));s.forEach((t=>{e[0][t].value=this.randomValue()}))}else if(a)for(let l=0;l<8;l++)e[l][t].value=this.randomValue();else s.forEach((l=>{for(let s=l;s>0;s--)e[s][t].value=e[s-1][t].value;e[0][t].value=this.randomValue()}))})),e}changeCells(e,t){const l=e.value;e.value=t.value,t.value=l,e.element.innerHTML=e.value,t.element.innerHTML=t.value,e.element.setAttribute("cell-value",e.value),t.element.setAttribute("cell-value",t.value)}randomValue(){return["A","B","C","D","E"][Math.floor(5*Math.random())]}}class s{extendCombinations(e){return e.map((e=>e.cellIds.length>3?{...e,bonus:!0,cellIds:(e.type,Array.from({length:8},((e,t)=>t)))}:e))}}class a{constructor(){}extendCombinations(e){return e.map((e=>({...e,score:30+20*(e.cellIds.length-3)})))}}class i{totalScore=0;logs=[];title='<div style="font-size: 30px; font-weight: bold">Statistics:<div>';init(){this.createScoreLabel(),this.createScoreStatistic()}write(e){e.forEach((e=>{this.logs.push(this.mapCombinationToLogInfo(e)),this.totalScore+=e.score}))}mapCombinationToLogInfo({id:e,type:t,bonus:l,score:s}){return{move:`Move: ${t} - ${e}`,bonus:l?'<span style="color: red">Bonus</span>':"",score:s}}createScoreLabel(){const e=document.createElement("score-label");e.style.display="block",e.style.fontSize="40px",e.style.fontWeight="bold",e.innerHTML=`Score: ${this.totalScore}`,document.querySelector("container").appendChild(e)}createScoreStatistic(){const e=document.createElement("score-statistic");e.style.display="block",e.innerHTML=this.title,document.querySelector("container").appendChild(e)}updateScore(){document.querySelector("score-label").innerHTML=`Score: ${this.totalScore}`}updateScoreStatistic(){if(0===this.logs.length)return;const e=document.querySelector("score-statistic");e.innerHTML=this.title,this.logs.forEach((({move:t,bonus:l,score:s})=>{const a=document.createElement("div");a.style.whiteSpace="nowrap",a.innerHTML=`${t}${l?" - "+l:""} - ${s}`,e.appendChild(a)}))}}(new class{state=[];selectedCell=null;gameBoard=new e;gameState=new l;bonus=new s;score=new a;statistic=new i;startGame(){this.state=this.gameState.getInitialState(),this.gameBoard.draw(this.state,this.handleCellClick.bind(this)),this.statistic.init()}handleCellClick(e){if(!this.selectedCell||!this.gameState.isTransitionValid(this.selectedCell,e))return void(this.selectedCell=e);this.gameState.changeCells(this.selectedCell,e);let t=this.gameState.getCombinations(this.state,[this.selectedCell,e]);t=this.bonus.extendCombinations(t),t=this.score.extendCombinations(t),this.statistic.write(t),this.statistic.updateScore(),this.statistic.updateScoreStatistic(),this.state=this.gameState.updateState(this.state,t),this.gameBoard.draw(this.state,this.handleCellClick.bind(this)),this.selectedCell=null}}).startGame()})();